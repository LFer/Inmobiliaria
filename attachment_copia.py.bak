# -*- coding: utf-8 -*-
# -*- encoding: utf-8 -*-

import hashlib
import itertools
import os
import re

from openerp import tools
from osv import osv
from osv import fields



class ir_attachment(osv.osv):

    _name = "ir.attachment"
    _inherit = "ir.attachment"



        
    def _file_read(self, cr, uid, location, fname, bin_size=False):

        full_path = self._full_path(cr, uid, location, fname)
        r = ''
        try:
            if bin_size:
                r = os.path.getsize(full_path)
            else:
                r = open(full_path).read().encode('base64')
        except IOError:
            _logger.error("_read_file reading %s",full_path)
        return r


    def _data_get(self, cr, uid, ids, name, arg, context=None):
        if context is None:
            context = {}
        result = {}
        location = self.pool.get('ir.config_parameter').get_param(cr, uid, 'ir_attachment.location')
        bin_size = context.get('bin_size')
        for attach in self.browse(cr, uid, ids, context=context):
            if location and attach.store_fname:
                result[attach.id] = self._file_read(cr, uid, location, attach.store_fname, bin_size)
            else:
                result[attach.id] = attach.db_datas
        return result        

                        
    _columns = {

        'web': fields.boolean('Web'),
        'email': fields.boolean('EMail'),
        'satelital': fields.boolean('Satelital'),
        'sequence': fields.integer('Secuencia'),
        #'image': fields.function(_data_get, string='File Content', type="binary", nodrop=True),
        #'fullPath': fields.function(_full_path, string='File path', type="char"),

    }

    _order = "sequence"

ir_attachment()



